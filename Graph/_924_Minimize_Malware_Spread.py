from typing import List


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:


class UnionFind(object):
    def __init__(self, n):
        self.parent = [0] * n
        self.rank = [1] * n  # Using rank to store component size
        for i in range(n):
            self.parent[i] = i

    def union(self, x, y):
        rootX = self.find(x)
        rootY = self.find(y)
        if rootX == rootY:
            return


    def find(self, x):
        if x == self.parent[x]:
            return x
        self.parent[x] = self.find(self.parent[x])
        return self.parent[x]
